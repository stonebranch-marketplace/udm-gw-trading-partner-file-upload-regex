<?xml version="1.0" encoding="UTF-8"?><unload unload_date="2019-04-16 19:42:28" unload_format="1" unload_table="ops_unv_tmplt" unload_version="6.6.0.0"><ops_unv_tmplt action="INSERT_OR_UPDATE"><credentials_var/><broadcast_cluster/><agent/><use_common_script>true</use_common_script><credentials/><icon_filesize>4526</icon_filesize><icon>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</icon><icon_date_created>2019-04-15 15:36:26</icon_date_created><description>UDM Gateway Upload Files to a Trading Partner using a Wildcard or Regular Expression</description><sys_updated_on>2019-04-16 18:54:25</sys_updated_on><agent_var/><icon_filename>ut_udmg_48.png</icon_filename><sys_id>afabd982dc234cc5b72f42877155af8f</sys_id><output_return_text/><sys_updated_by>ccocksedge</sys_updated_by><variable_prefix>udmg</variable_prefix><sys_created_on>2017-08-24 17:00:18</sys_created_on><script_windows/><credentials_var_check>false</credentials_var_check><agent_cluster_var/><agent_cluster_var_check>false</agent_cluster_var_check><wait_for_output>false</wait_for_output><agent_var_check>false</agent_var_check><output_failure_only>false</output_failure_only><sys_created_by>ccocksedge</sys_created_by><output_return_nline>100</output_return_nline><output_return_sline>1</output_return_sline><exit_code_text/><runtime_dir/><output_type>1</output_type><desktop_interact>false</desktop_interact><output_return_type>1</output_return_type><script_unix/><output_return_file/><run_as_sudo>false</run_as_sudo><script>#!/opt/universal/python3.6/bin/python3
# --
#         Origins: Stonebranch
#          Author: Colin Cocksedge colin.cocksedge@stonebranch.com
#            Date: 08-AUG-2018
#
#    Copyright (c) Stonebranch, 2018.  All rights reserved.
#
#         Purpose : Universal Task UDMG Trading Partner Regex Upload
#
version = "2.3"
#           Version History:    2.0     CCO     08-AUG-2018     V2 Accomodates Latest Universal Task Template / Requires V11 of MFT Server.  
#                               2.1     CCO     28-MAR-2019     Support MFT Server 11.1
#                               2.2     CCO     29-MAR-2019     Changes to Dynamically Install External Modules if Not Found, and Test MFT Server Version to provide backwards support for MFT Server 11.0
#                               2.3     CCO     16-APR-2019     Support HTTPS
# --

# -- Main Logic Function
def main():
    ScriptSetup()                                               # -- Import Required Modules, Setup Logging Format, Set Variables 
    UdmgLogon()                                                 # -- Logon to UDMG server
    UdmgGetVersion()                                            # -- Confirm MFT Server Version -- Must be 11.0 or Higher
    UdmgCreateTrigger()                                         # -- Create Temporary UDM Gateway Trigger
    UdmgRunTrigger()                                            # -- Run Temporary UDM Gateway Trigger
    if level == 0:                                              # -- API changed between 11.0 and 11.1
        UdmgGetStatus0()                                        # -- Get Temporary UDM Gateway Trigger Status (11.0 API) / Delete Temp Trigger / Retrieve Log
    else:
        UdmgGetStatus1()                                        # -- Get Temporary UDM Gateway Trigger Status (11.1 API) / Delete Temp Trigger / Retrieve Log
    UdmgLogoff()                                                # -- Close UDM Gateway Session
# --

# -- Import Required Modules, Setup Logging Format, Set Variables 
def ScriptSetup():
    # -- Import required python modules 
    import argparse, logging, sys, uuid, time, datetime, json, urllib3
    # -- Import requests, if error then install requests
    try:
        import requests
    except:
        try:
            from pip import main as pipmain
        except:
            from pip._internal import main as pipmain 
        pipmain(['install','--trusted-host=pypi.python.org','--trusted-host=pypi.org','--trusted-host=files.pythonhosted.org','requests'])
        import requests
    global argparse, logging, sys, requests, uuid, time, datetime, json, urllib3
    # -- Setup LogDate
    global log_date
    log_date = json.dumps(datetime.datetime.now().isoformat())
    # -- Set Variables from Universal Task Form or Command Line Input
    parser=argparse.ArgumentParser(description='Purpose : Universal Task UDMG Trading Partner Regex Upload')
    # ## --&gt; Capture Universal Task Form Variables Here
    parser.add_argument("--partner", default="${ops_udmg_partner}")
    parser.add_argument("--localdirectory", default="${ops_udmg_localdirectory}")
    parser.add_argument("--regularexpression", default="${ops_udmg_regularexpression}")
    parser.add_argument("--remotedirectory", default="${ops_udmg_remotedirectory}")
    parser.add_argument("--passive", default="${ops_udmg_passive}")
    parser.add_argument("--transfermode", default="${ops_udmg_transfermode}")
    parser.add_argument("--failifnofilesfound", default="${ops_udmg_failifnofilesfound}")
    parser.add_argument("--deleteonsuccess", default="${ops_udmg_deleteonsuccess}")
    parser.add_argument("--expressiontype", default="${ops_udmg_expressiontype}")
    parser.add_argument("--retrylimit", default="${ops_udmg_retrylimit}")
    parser.add_argument("--retryinterval", default="${ops_udmg_retryinterval}")
    parser.add_argument("--host", default="${ops_udmg_host}")
    parser.add_argument("--domain", default="${ops_udmg_domain}")
    parser.add_argument("--username", default="${_credentialUser('${ops_udmg_credential}')}")
    parser.add_argument("--password", default="${_credentialPwd('${ops_udmg_credential}')}") 
    # ## --&gt;
    parser.add_argument("--loglevel", default="${ops_udmg_loglevel}")
    global args
    args=parser.parse_args()
    # -- Setup Logging
    numeric_level = getattr(logging, args.loglevel.upper(), None)
    logging.basicConfig(format='%(asctime)-15s - %(levelname)-8s - %(message)s', level=numeric_level)
    # -- Print Paramater Values
    logging.debug("Executing version {0} with the following parameters : {1}".format(version, args))
    # -- Strip Trailing / from Remote Controller URL to Avoid 404 Resource Not Found
    args.host = args.host.rstrip("/")
    # -- Ignore Https Warnings
    urllib3.disable_warnings()
# --

# ## --&gt; Functions Go Here
# -- Logon to UDMG server
def UdmgLogon():
    logging.info("Accessing UDM Gateway server")
    # Setup API data
    udmg_url = args.host + "/rest/management/login"
    udmg_data = {'username': args.username, 'password': args.password}
    # Call API
    global udmg_session
    udmg_session = requests.session()
    try:
        UdmgLogon = udmg_session.post(udmg_url, json=udmg_data, verify=False)
    except:
        logging.error("API Call Error {0}".format(sys.exc_info()[0]))
        sys.exit(1)
    if(UdmgLogon.ok):
        logging.info("UDM Gateway Login Successful for User {0}".format(args.username))
    else:
        logging.critical("Failed with code : {0}".format(UdmgLogon.status_code))
        logging.critical("Failed with reason : {0}".format(UdmgLogon.text))
        sys.exit(1)
# --
# -- Get MFT Server Version
def UdmgGetVersion():
    logging.info("Getting UDM Gateway Server Version")
    # Setup API data
    udmg_url = args.host + "/rest/management/server/parameters"
    # Call API
    try:
        UdmgGetVersion = udmg_session.get(udmg_url, verify=False)
    except:
        logging.error("API Call Error {0}".format(sys.exc_info()[0]))
        sys.exit(1)
    if(UdmgGetVersion.ok):
        result = UdmgGetVersion.json()
        version = result['applicationVersion']
        logging.info("UDM Gateway Get Version Successful. Version = {0}".format(version))
        # Which Version
        version=version.split(".",2)
        if int(version[0]) &lt; 11:
            logging.error("Script only supports UDM Gateway V11 or Higher")
            sys.exit(1)
        else:
            global level
            level = int(version[1])
    else:
        logging.critical("Failed with code : {0}".format(UdmgLogon.status_code))
        logging.critical("Failed with reason : {0}".format(UdmgLogon.text))
        sys.exit(1)
# --
# -- Create Temporary UDM Gateway Trigger
def UdmgCreateTrigger():
    global udmg_trigger
    udmg_trigger = uuid.uuid1()
    logging.info("Creating Temporary UDM Gateway Trigger")
    # Setup API Data
    udmg_url = args.host + "/rest/management/triggers/" + args.domain
    udmg_data = {
        "name": udmg_trigger.int,
        "description":'Temporary Trigger Created by Universal Controller',
        "eventType":'com.jscape.inet.mft.common.CurrentTimeEvent',
        "expressionString":'',
        "enabled":'false',
        "contexts": [
            {
                "actionClass": "com.jscape.inet.mft.workflow.actions.TradingPartnerRegexFileUploadAction",
                "parametersMap": {
                    "Partner": args.partner,
                    "RemoteDirectory": args.remotedirectory,
                    "RegularExpression": args.regularexpression,
                    "ExpressionType": args.expressiontype,
                    "LocalDirectory": args.localdirectory,
                    "Passive": args.passive,
                    "TransferMode": args.transfermode,
                    "PerformChecksum": "false",
                    "RetryLimit": args.retrylimit,
                    "RetryInterval": args.retryinterval,
                    "Threads": "1",
                    "FailIfNoFilesFound": args.failifnofilesfound,
                    "DeleteOnSuccess": args.deleteonsuccess,
                    "DebugFile": "",
                    "Priority": "1",
                    "TriggerErrorMessage": "",
                    "LogAction": "true"
                },
                "notes": "",
            }
        ],
        "allowErrorEvent": 'true',
        "enabled": 'false',
        "asynchronous": 'false',
        "asynchronousActions": 'false',
        "tags": [],
    }
    # Call API
    try:
        UdmgCreateTrigger = udmg_session.post(udmg_url, json=udmg_data, verify=False)
    except:
        logging.error("API Call Error {0}".format(sys.exc_info()[0]))
        sys.exit(1)
    if(UdmgCreateTrigger.ok):
        logging.info("UDM Gateway Trigger = {0}".format(udmg_trigger.int))
    else:
        logging.critical("Failed with code : {0}".format(UdmgCreateTrigger.status_code))
        logging.critical("Failed with reason : {0}".format(UdmgCreateTrigger.text))
        sys.exit(1)
# --
# -- Run Temporary UDM Gateway Trigger
def UdmgRunTrigger():
    logging.info("Run Temporary UDM Gateway Trigger")
    # Setup API data
    udmg_url = args.host + "/rest/management/triggers/" + args.domain + "/" + str(udmg_trigger.int) + "/run"
    udmg_data = {
    }
    # Call API
    try:
        UdmgRunTrigger = udmg_session.post(udmg_url, json=udmg_data, verify=False)
    except:
        logging.error("API Call Error {0}".format(sys.exc_info()[0]))
        sys.exit(1)    
    if(UdmgRunTrigger.ok):
        logging.info("UDM Gateway Run Trigger Sucessful, Trigger = {0}".format(udmg_trigger.int))
    else:
        logging.critical("Failed with code : {0}".format(UdmgRunTrigger.status_code))
        logging.critical("Failed with reason : {0}".format(UdmgRunTrigger.text))
        sys.exit(1)
# --
# -- Get Temporary UDM Gateway Trigger Status -- API Version 11.0
def UdmgGetStatus0():
    logging.info("Retrieving Temporary Trigger Status")
    # Setup API data
    udmg_url = args.host + "/rest/management/trigger-states/" + args.domain
    # Loop to Get Trigger Status
    status_complete = "n"
    while status_complete == "n":
        # Call API
        try:
            UdmgGetStatus = udmg_session.get(udmg_url, verify=False)
        except:
            logging.error("API Call Error {0}".format(sys.exc_info()[0]))
            sys.exit(1)    
        status = UdmgGetStatus.json()
        if(UdmgGetStatus.ok):
            # Check Status
            for item in status:
                if item['triggerName'] == str(udmg_trigger.int):
                    if (item['status'] == "RUNNING") or (item['status'] == "QUEUED"):
                        time.sleep(3)
                    else:
                        status_complete = "y"
                        if item['status'] == "FAILED":
                            logging.error("Trigger FAILED, Trigger = {0}".format(udmg_trigger.int))
                            UdmgDeleteTrigger()
                            UdmgGetLog()
                            UdmgLogoff()
                            quit(9)
                        elif item['status'] == "COMPLETED":
                            logging.info("Trigger COMPLETED, Trigger = {0}".format(udmg_trigger.int))
                            UdmgDeleteTrigger()
                            UdmgGetLog()
                        else:
                            logging.error("Unexpected Trigger Status {0}, Trigger = {1}".format(item['status'], udmg_trigger.int))
                            UdmgDeleteTrigger()
                            UdmgGetLog()
                            UdmgLogoff()
                            quit(12)            
        else:
            logging.critical("Failed with code : {0}".format(UdmgGetStatus.status_code))
            logging.critical("Failed with reason : {0}".format(UdmgGetStatus.text))
            sys.exit(1)
# --
# -- Get Temporary UDM Gateway Trigger Status -- API Version 11.1
def UdmgGetStatus1():
    logging.info("Retrieving Temporary Trigger Status")
    # Setup API data
    udmg_url = args.host + "/rest/management/trigger-service/" + args.domain + "/states?query=" + str(udmg_trigger.int) + "&amp;field=triggerName&amp;order=ASC"
    # Loop to Get Trigger Status
    status_complete = "n"
    while status_complete == "n":
        # Call API
        try:
            UdmgGetStatus = udmg_session.get(udmg_url, verify=False)
        except:
            logging.error("API Call Error {0}".format(sys.exc_info()[0]))
            sys.exit(1)    
        status = UdmgGetStatus.json()
        if(UdmgGetStatus.ok):
            # Check Status
            if status['records'][0]['status'] == "RUNNING" or status['records'][0]['status'] == "QUEUED":
                time.sleep(3)
            else:
                status_complete = "y"
                if status['records'][0]['status'] == "FAILED":
                    logging.error("Trigger FAILED, Trigger = {0}".format(udmg_trigger.int))
                    UdmgDeleteTrigger()
                    UdmgGetLog()
                    UdmgLogoff()
                    sys.exit(9)
                elif status['records'][0]['status'] == "COMPLETED":
                    logging.info("Trigger COMPLETED, Trigger = {0}".format(udmg_trigger.int))
                    UdmgDeleteTrigger()
                    UdmgGetLog()
                else:
                    logging.error("Unexpected Trigger Status {0}, Trigger = {1}".format(item['status'], udmg_trigger.int))
                    UdmgDeleteTrigger()
                    UdmgGetLog()
                    UdmgLogoff()
                    sys.exit(12)
        else:
            logging.critical("Failed with code : {0}".format(UdmgGetStatus.status_code))
            logging.critical("Failed with reason : {0}".format(UdmgGetStatus.text))
            sys.exit(1)
# --
# -- Delete Temporary UDM Gateway Trigger
def UdmgDeleteTrigger():
    logging.info("Deleting UDM Gateway Temporary Trigger")
    # Setup API data
    udmg_url = args.host + "/rest/management/triggers/" + args.domain +  "/" + str(udmg_trigger.int)
    # Call API
    try:
        UdmgDeleteTrigger = udmg_session.delete(udmg_url, verify=False)
    except:
        logging.error("API Call Error {0}".format(sys.exc_info()[0]))
        sys.exit(1)    
    if(UdmgDeleteTrigger.ok):
        logging.info("Trigger {0} Deleted".format(udmg_trigger.int))
    else:
        logging.critical("Failed with code : {0}".format(UdmgDeleteTrigger.status_code))
        logging.critical("Failed with reason : {0}".format(UdmgDeleteTrigger.text))
        sys.exit(1)
# --
# -- Get Temporary UMD Gateway Trigger Log
def UdmgGetLog():
    logging.info("Get Temporary UMD Gateway Trigger Log")
    # Start Log Search
    time.sleep(5)
    # Setup API data
    udmg_url = args.host + "/rest/management/log-searches/" + args.domain +  "/start" 
    udmg_data = {
        "name": udmg_trigger.int,
        "maxRecords": '100',
        "date": str(log_date.strip('"')),
        "startDate": str(log_date.strip('"')),
        "endDate": 'null',
        "criteria": 'ServerMessage # "' + str(udmg_trigger.int) + '"',
        "error": 'string'
    }    
    # Call API
    try:
        UdmgGetLog = udmg_session.put(udmg_url, json=udmg_data, verify=False)
    except:
        logging.error("API Call Error {0}".format(sys.exc_info()[0]))
        sys.exit(1)
    if(UdmgGetLog.ok):
        logging.info("UDM Gateway Start Log Search Sucessful")
        time.sleep(3)
    else:
        logging.critical("Failed with code : {0}".format(UdmgGetLog.status_code))
        logging.critical("Failed with reason : {0}".format(UdmgGetLog.text))
        sys.exit(1)
    # Check Log Search Complete
    logging.info("UDM Gateway Checking if Log Search Complete")
    # Setup API data
    udmg_url = args.host + "/rest/management/log-searches/" + args.domain
    # Loop to Check Log Search 100% Complete
    search_complete = "n"
    while search_complete == "n":
        # Call API
        try:
            UdmgGetLog = udmg_session.get(udmg_url, verify=False)
        except:
            logging.error("API Call Error {0}".format(sys.exc_info()[0]))
            sys.exit(1)    
        search = UdmgGetLog.json()
        if(UdmgGetLog.ok):
            # Loop Through Status
            for item in search:
                if item['name'] == str(udmg_trigger.int):
                    if item['progress'] == 100:
                        logging.info("UDM Gateway Log Search Complete")
                        search_complete = "y"
                    else:
                        time.sleep(3)
        else:
            logging.critical("Failed with code : {0}".format(UdmgGetLog.status_code))
            logging.critical("Failed with reason : {0}".format(UdmgGetLog.text))
            sys.exit(1)
    # Get Log Search Result
    # Setup API data
    udmg_url = args.host + "/rest/management/log-searches/" + args.domain + "/" + str(udmg_trigger.int) + "/100"
    udmg_headers = {'content-type': 'text/plain'}
    # Call API
    try:
        UdmgGetLog = udmg_session.get(udmg_url, headers=udmg_headers, verify=False)
    except:
        logging.error("API Call Error {0}".format(sys.exc_info()[0]))
        sys.exit(1)            
    if(UdmgGetLog.ok):
        logging.info("UDM Gateway Retrieve Log Successful")
        print(str(UdmgGetLog.text))
    else:
        logging.critical("Failed with code : {0}".format(UdmgGetLog.status_code))
        logging.critical("Failed with reason : {0}".format(UdmgGetLog.text))
        sys.exit(1)
    # Delete Log Search
    # Setup API data
    udmg_url = args.host + "/rest/management/log-searches/" + args.domain + "/" + str(udmg_trigger.int)
    # Call API
    try:
        UdmgGetLog = udmg_session.delete(udmg_url, verify=False)
    except:
        logging.error("API Call Error {0}".format(sys.exc_info()[0]))
        sys.exit(1)        
    if(UdmgGetLog.ok):
        logging.info("UDM Gateway Delete Log Search Successful")
    else:
        logging.critical("Failed with code : {0}".format(UdmgGetLog.status_code))
        logging.critical("Failed with reason : {0}".format(UdmgGetLog.text))
        sys.exit(1)
# --
# -- Close UDM Gateway Session
def UdmgLogoff():
    logging.info("Closing UDM Gateway Session")
    # Setup API data
    udmg_url = args.host + "/rest/management/logout"
    # Call API
    try:
        UdmgLogoff = udmg_session.post(udmg_url, verify=False)
    except:
        logging.error("API Call Error {0}".format(sys.exc_info()[0]))
        sys.exit(1)    
    if(UdmgLogoff.ok):
        logging.info("UDM Gateway Logoff Successful for User {0}".format(args.username))
    else:
        logging.critical("Failed with code : {0}".format(UdmgLogoff.status_code))
        logging.critical("Failed with reason : {0}".format(UdmgLogoff.text))
        sys.exit(1)
# --
# --&gt;

# -- Execute
main()</script><agent_type>1</agent_type><script_type_windows>uapy</script_type_windows><environment/><agent_cluster/><elevate_user>false</elevate_user><exit_code_output/><name>Trading Partner Regex Upload</name><exit_codes>0</exit_codes><exit_code_processing>1</exit_code_processing><create_console>false</create_console><related_items_node><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2017-08-25 15:29:12</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>1d271e91846845c18e3d1705055be771</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:17:26</sys_created_on><field_value>Binary</field_value><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Transfer Mode</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>9</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>choiceField2</field_mapping><name>transfermode</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2017-08-24 17:20:09</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>224f0f9f6ed5409ba355c62ce5a83ad1</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:20:09</sys_created_on><field_value>60</field_value><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Retry Interval</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>13</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>intField2</field_mapping><name>retryinterval</name><field_regex/><field_type>2</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>true</form_start_row><sys_updated_on>2017-08-24 17:22:15</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>276f8641fa3c4b749d3acd431f9a34f1</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:14:08</sys_created_on><field_value/><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length>255</field_length><form_end_row>false</form_end_row><label>Regular Expression / Wildcard</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>5</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>textField5</field_mapping><name>regularexpression</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>true</form_start_row><sys_updated_on>2017-08-24 17:21:58</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>33a9d2e236d543ecafbc087f336e0f29</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:13:26</sys_created_on><field_value/><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>3</form_col_span><field_length>255</field_length><form_end_row>false</form_end_row><label>Local Directory</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>4</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>textField4</field_mapping><name>localdirectory</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>true</form_start_row><sys_updated_on>2018-08-09 16:18:48</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>48ea167c24124767a6aad9fedfe3966b</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2018-08-09 16:18:48</sys_created_on><field_value>Info</field_value><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Logging Level</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>14</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Controls messages issued from the Universal Task Script</hint><field_mapping>choiceField3</field_mapping><name>loglevel</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2017-08-24 17:12:05</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>51cb88e701e24a7c9e6a7a84524d9789</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:12:05</sys_created_on><field_value/><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>UDMG Credential</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>1</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>credentialField1</field_mapping><name>credential</name><field_regex/><field_type>5</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>true</form_start_row><sys_updated_on>2017-08-24 17:22:27</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>7f043cb5bb0b4927804d094dbf34d3fc</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:16:05</sys_created_on><field_value/><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>3</form_col_span><field_length>255</field_length><form_end_row>false</form_end_row><label>Remote Directory</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>7</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>textField6</field_mapping><name>remotedirectory</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2017-12-01 17:17:18</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>827c3575b70249f78b260b9020a9b26e</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:11:35</sys_created_on><field_value>http://hostname:11880</field_value><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length>255</field_length><form_end_row>false</form_end_row><label>UDMG Host</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>0</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>URL for UDMG server</hint><field_mapping>textField1</field_mapping><name>host</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2017-08-24 17:16:48</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>85682ddb931846debd4c3ee8992b5741</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:16:48</sys_created_on><field_value>false</field_value><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Passive Mode</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>8</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>booleanField1</field_mapping><name>passive</name><field_regex/><field_type>3</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2017-08-24 17:18:50</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>8dfee27d83bb4994a6ac862412f7b6d0</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:18:50</sys_created_on><field_value>false</field_value><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Fail If No Files Found</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>10</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>booleanField2</field_mapping><name>failifnofilesfound</name><field_regex/><field_type>3</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2017-08-24 17:15:16</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>94f8969c43704df68dba945cfa437586</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:14:29</sys_created_on><field_value>Regular Expression</field_value><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Expression Type</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>6</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>choiceField1</field_mapping><name>expressiontype</name><field_regex/><field_type>4</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>true</form_start_row><sys_updated_on>2017-08-24 17:19:47</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>9af381c8b4574d4aac4b787a89265103</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:19:47</sys_created_on><field_value>0</field_value><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Retry Limit</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>12</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>intField1</field_mapping><name>retrylimit</name><field_regex/><field_type>2</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>true</form_start_row><sys_updated_on>2017-08-24 17:12:57</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>b2ddfd4e9b20495fa70a1d11610b58eb</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:12:57</sys_created_on><field_value/><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length>255</field_length><form_end_row>false</form_end_row><label>Trading Partner</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>3</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>textField3</field_mapping><name>partner</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2017-08-24 17:19:13</sys_updated_on><boolean_value_type>1</boolean_value_type><required>false</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>b3b1d9f3f52c48b39d8258ffb4c968e7</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:19:13</sys_created_on><field_value>false</field_value><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>Delete on Success</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>11</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>booleanField3</field_mapping><name>deleteonsuccess</name><field_regex/><field_type>3</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2017-08-24 17:12:25</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>e183970f78b14dde81b9931bce828e9d</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ccocksedge</sys_updated_by><array_value_title/><sys_created_on>2017-08-24 17:12:25</sys_created_on><field_value/><sys_created_by>ccocksedge</sys_created_by><int_field_min/><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>UDMG Domain</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>2</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint/><field_mapping>textField2</field_mapping><name>domain</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>48ea167c24124767a6aad9fedfe3966b</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>267446239eb744a193f7a9df353f8c49</sys_id><sequence>5</sequence><sys_updated_by>ccocksedge</sys_updated_by><sys_created_on>2018-08-09 16:19:25</sys_created_on><field_value_label>Critical</field_value_label><field_value>Critical</field_value><sys_updated_on>2018-08-09 16:19:25</sys_updated_on><sys_created_by>ccocksedge</sys_created_by><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>48ea167c24124767a6aad9fedfe3966b</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>33bd08e89e16495fa776cb9d708df5c5</sys_id><sequence>2</sequence><sys_updated_by>ccocksedge</sys_updated_by><sys_created_on>2018-08-09 16:19:06</sys_created_on><field_value_label>Debug</field_value_label><field_value>Debug</field_value><sys_updated_on>2018-08-09 16:19:06</sys_updated_on><sys_created_by>ccocksedge</sys_created_by><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>1d271e91846845c18e3d1705055be771</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>346b66cc4b8840a2976b6f49630a42c4</sys_id><sequence>0</sequence><sys_updated_by>ccocksedge</sys_updated_by><sys_created_on>2017-08-24 17:17:39</sys_created_on><field_value_label>Binary</field_value_label><field_value>binary</field_value><sys_updated_on>2017-08-24 17:17:39</sys_updated_on><sys_created_by>ccocksedge</sys_created_by><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>94f8969c43704df68dba945cfa437586</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>47a3f4f5d90b449b9f0e712ebc8f0039</sys_id><sequence>0</sequence><sys_updated_by>ccocksedge</sys_updated_by><sys_created_on>2017-08-24 17:14:44</sys_created_on><field_value_label>Regular Expression</field_value_label><field_value>Regular Expression</field_value><sys_updated_on>2017-08-24 17:14:44</sys_updated_on><sys_created_by>ccocksedge</sys_created_by><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>48ea167c24124767a6aad9fedfe3966b</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>58883be1a5a1409e80a1958cae4fdc1b</sys_id><sequence>3</sequence><sys_updated_by>ccocksedge</sys_updated_by><sys_created_on>2018-08-09 16:19:14</sys_created_on><field_value_label>Warning</field_value_label><field_value>Warning</field_value><sys_updated_on>2018-08-09 16:19:14</sys_updated_on><sys_created_by>ccocksedge</sys_created_by><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>48ea167c24124767a6aad9fedfe3966b</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>59d761058e5e40608149862cf0bbc98b</sys_id><sequence>0</sequence><sys_updated_by>ccocksedge</sys_updated_by><sys_created_on>2018-08-09 16:18:56</sys_created_on><field_value_label>None</field_value_label><field_value>None</field_value><sys_updated_on>2018-08-22 14:13:19</sys_updated_on><sys_created_by>ccocksedge</sys_created_by><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>48ea167c24124767a6aad9fedfe3966b</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>85c4b8b86382479589afe2b11dc44fee</sys_id><sequence>4</sequence><sys_updated_by>ccocksedge</sys_updated_by><sys_created_on>2018-08-09 16:19:19</sys_created_on><field_value_label>Error</field_value_label><field_value>Error</field_value><sys_updated_on>2018-08-09 16:19:19</sys_updated_on><sys_created_by>ccocksedge</sys_created_by><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>94f8969c43704df68dba945cfa437586</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>9223f454ea434257917bcc9d85d2abf3</sys_id><sequence>1</sequence><sys_updated_by>ccocksedge</sys_updated_by><sys_created_on>2017-08-24 17:14:57</sys_created_on><field_value_label>Wildcard</field_value_label><field_value>Wildcard</field_value><sys_updated_on>2017-08-24 17:14:57</sys_updated_on><sys_created_by>ccocksedge</sys_created_by><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>48ea167c24124767a6aad9fedfe3966b</field_id><use_field_value_for_label>true</use_field_value_for_label><sys_id>996be54fda3d4fec8f5a12ba085e5f18</sys_id><sequence>1</sequence><sys_updated_by>ccocksedge</sys_updated_by><sys_created_on>2018-08-09 16:19:01</sys_created_on><field_value_label>Info</field_value_label><field_value>Info</field_value><sys_updated_on>2018-08-09 16:19:01</sys_updated_on><sys_created_by>ccocksedge</sys_created_by><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>1d271e91846845c18e3d1705055be771</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>9cb529d8d3694c1082049772f43320a3</sys_id><sequence>2</sequence><sys_updated_by>ccocksedge</sys_updated_by><sys_created_on>2017-08-24 17:17:59</sys_created_on><field_value_label>Auto</field_value_label><field_value>auto</field_value><sys_updated_on>2017-08-24 17:17:59</sys_updated_on><sys_created_by>ccocksedge</sys_created_by><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id></ops_unv_tmplt_field_choice><ops_unv_tmplt_field_choice action="INSERT_OR_UPDATE"><field_id>1d271e91846845c18e3d1705055be771</field_id><use_field_value_for_label>false</use_field_value_for_label><sys_id>ef9d4652e7be421fbd274da65886b3f0</sys_id><sequence>1</sequence><sys_updated_by>ccocksedge</sys_updated_by><sys_created_on>2017-08-24 17:17:47</sys_created_on><field_value_label>Ascii</field_value_label><field_value>ascii</field_value><sys_updated_on>2017-08-24 17:17:47</sys_updated_on><sys_created_by>ccocksedge</sys_created_by><universal_template_id>afabd982dc234cc5b72f42877155af8f</universal_template_id></ops_unv_tmplt_field_choice></related_items_node></ops_unv_tmplt></unload>